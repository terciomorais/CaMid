/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.2.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'

    id 'org.hidetake.ssh' version '2.9.0'
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

dependencies {
  // This dependency is found on compile classpath of this component and consumers.
  implementation 'com.google.guava:guava:27.0.1-jre'
 /*  // https://mvnrepository.com/artifact/org.w3c/dom
  compile group: 'org.w3c', name: 'dom', version: '2.3.0-jaxb-1.0.6' */
  // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
  compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
  // https://mvnrepository.com/artifact/commons-io/commons-io
  compile group: 'commons-io', name: 'commons-io', version: '2.6'
  // https://mvnrepository.com/artifact/org.fusesource/sigar
  compile group: 'org.fusesource', name: 'sigar', version: '1.6.4'
  // https://mvnrepository.com/artifact/com.google.code.gson/gson
  compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
  // Local repository
  compile group: 'org.opennebula.oca', name: 'org.opennebula.client', version: '5.2.0'
  // https://mvnrepository.com/artifact/org.apache.xmlrpc/xmlrpc-common
  compile group: 'org.apache.xmlrpc', name: 'xmlrpc-common', version: '3.1.3'
  // https://mvnrepository.com/artifact/org.apache.xmlrpc/xmlrpc-client
  compile group: 'org.apache.xmlrpc', name: 'xmlrpc-client', version: '3.1.3'
  // https://mvnrepository.com/artifact/org.apache.ws.commons.util/ws-commons-util
  compile group: 'org.apache.ws.commons.util', name: 'ws-commons-util', version: '1.0.2'
  // Use JUnit test framework
  testImplementation 'junit:junit:4.12'
}

// Define the main class for the application
mainClassName = 'exercicio04RemotePatterns.App'

remotes {
  c00 {
    host      = '10.66.67.10'
    user      = 'root'
    identity  = file('./auth/id_rsa-cloud00')
  }
  c00_node00 {
    host = '10.66.67.11'
    user = 'root'
    identity  = file('./auth/id_rsa-cloud00')
  }
  c00_node01{
    host = '10.66.67.12'
    user = 'root'
    identity  = file('./auth/id_rsa-cloud00')
  }
  c01 {
    host      = '10.66.67.20'
    user      = 'root'
    identity  = file('./auth/id_rsa-cloud01')
  }
  c01_node00 {
    host = '10.66.67.21'
    user = 'root'
    identity  = file('./auth/id_rsa-cloud01')
  }
  c01_node01{
    host = '10.66.67.22'
    user = 'root'
    identity  = file('./auth/id_rsa-cloud01')
  }
  client {
    host      = '10.66.67.6'
    user      = 'root'
    identity  = file('./auth/id_rsa-cloud01')
  }
}

task fatJar(type: Jar) {
    baseName = project.name //+ '-all'
    println 'Executing fatJar task'
    from {
    	configurations.compile.collect {
    		it.isDirectory() ? it : zipTree(it)
    	} 	
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    with jar
}

task testSSH {
  doLast {
    ssh.run {
      session(remotes.c01_node01){
      }
    }
  }
}

task fullDeployCloud {
  dependsOn ':fatJar'
  doLast {
    ssh.run {
      session(remotes.c00){
        put from: file('build/libs/exercicio04RemotePatterns.jar'), into:'/root/'
        remove 'config', 'libs', 'libs/sigar','scripts', 'logs'
        execute 'mkdir scripts logs config libs libs/sigar'

        put from: files('config/registry.config', 'config/frontend.config', 'config/naming.properties', 'config/remote_front.properties'), into: '/root/config'
        put from: files('scripts/frontend_server.sh','scripts/name_server.sh'), into: '/root/scripts'
        put from: file('libs/sigar/libsigar-amd64-linux.so'), into: '/root/libs/sigar'

        execute 'mv config/naming.properties config/remote.properties'
        execute 'chmod 755 /root/exercicio04RemotePatterns.jar'
        execute 'chmod 755 -R /root/scripts'
        execute 'chmod 755 -R /root/config'
        execute 'chmod 755 -R /root/libs'
      }
      session(remotes.c00_node00){
        put from: file('build/libs/exercicio04RemotePatterns.jar'), into:'/root/'
        remove 'config', 'libs', 'libs/sigar','scripts', 'logs'
        execute 'mkdir scripts logs config libs libs/sigar'

        put from: files('config/camid.config', 'config/remote.properties'), into: '/root/config'
        put from: files('scripts/app_server.sh'), into: '/root/scripts'
        put from: file('libs/sigar/libsigar-amd64-linux.so'), into: '/root/libs/sigar'

        execute 'chmod 755 /root/exercicio04RemotePatterns.jar'
        execute 'chmod 755 -R /root/scripts'
        execute 'chmod 755 -R /root/config'
        execute 'chmod 755 -R /root/libs'
      }
      session(remotes.c00_node01){
        put from: file('build/libs/exercicio04RemotePatterns.jar'), into:'/root/'
        remove 'config', 'libs', 'libs/sigar','scripts', 'logs'
        execute 'mkdir scripts logs config libs libs/sigar'
        
        put from: files('config/camid.config', 'config/remote.properties'), into: '/root/config'
        put from: files('scripts/app_server.sh'), into: '/root/scripts'
        put from: file('libs/sigar/libsigar-amd64-linux.so'), into: '/root/libs/sigar'

        execute 'chmod 755 /root/exercicio04RemotePatterns.jar'
        execute 'chmod 755 -R /root/scripts'
        execute 'chmod 755 -R /root/config'
        execute 'chmod 755 -R /root/libs'
      }
      session(remotes.c01){
        put from: file('build/libs/exercicio04RemotePatterns.jar'), into:'/root/'
        remove 'config', 'libs', 'libs/sigar','scripts', 'logs'
        execute 'mkdir scripts logs config libs libs/sigar'

        put from: files('config/registry.config', 'config/frontend.config', 'config/naming.properties', 'config/remote_front.properties'), into: '/root/config'
        put from: files('scripts/frontend_server.sh','scripts/name_server.sh'), into: '/root/scripts'
        put from: file('libs/sigar/libsigar-amd64-linux.so'), into: '/root/libs/sigar'

        execute 'mv config/naming.properties config/remote.properties'
        execute 'chmod 755 /root/exercicio04RemotePatterns.jar'
        execute 'chmod 755 -R /root/scripts'
        execute 'chmod 755 -R /root/config'
        execute 'chmod 755 -R /root/libs'
      }
      session(remotes.c01_node00){
        put from: file('build/libs/exercicio04RemotePatterns.jar'), into:'/root/'
        remove 'config', 'libs', 'libs/sigar','scripts', 'logs'
        execute 'mkdir scripts logs config libs libs/sigar'

        put from: files('config/camid.config', 'config/remote.properties'), into: '/root/config'
        put from: files('scripts/app_server.sh'), into: '/root/scripts'
        put from: file('libs/sigar/libsigar-amd64-linux.so'), into: '/root/libs/sigar'

        execute 'chmod 755 /root/exercicio04RemotePatterns.jar'
        execute 'chmod 755 -R /root/scripts'
        execute 'chmod 755 -R /root/config'
        execute 'chmod 755 -R /root/libs'
      }
      session(remotes.c01_node01){
        put from: file('build/libs/exercicio04RemotePatterns.jar'), into:'/root/'
        remove 'config', 'libs', 'libs/sigar','scripts', 'logs'
        execute 'mkdir scripts logs config libs libs/sigar'
        
        put from: files('config/camid.config', 'config/remote.properties'), into: '/root/config'
        put from: files('scripts/app_server.sh'), into: '/root/scripts'
        put from: file('libs/sigar/libsigar-amd64-linux.so'), into: '/root/libs/sigar'

        execute 'chmod 755 /root/exercicio04RemotePatterns.jar'
        execute 'chmod 755 -R /root/scripts'
        execute 'chmod 755 -R /root/config'
        execute 'chmod 755 -R /root/libs'
      }      
      session(remotes.client){
        put from: file('build/libs/exercicio04RemotePatterns.jar'), into:'/root/'
        remove 'config', 'libs', 'libs/sigar','scripts', 'logs'
        execute 'mkdir scripts logs config libs libs/sigar'
        
        //put from: files('config/registry.config', 'config/frontend.config', 'config/remote.properties'), into: '/root/config'
        put from: files('scripts/app_server.sh', 'scripts/experiment_MNG_Replication_Classic.sh', 'scripts/experiment_MNG_OFF_Classic.sh', 'scripts/experiment_MNG_ON_Classic.sh', ), into: '/root/scripts'
        put from: file('libs/sigar/libsigar-amd64-linux.so'), into: '/root/libs/sigar'

        execute 'chmod 755 /root/exercicio04RemotePatterns.jar'
        execute 'chmod 755 -R /root/scripts'
        execute 'chmod 755 -R /root/config'
        execute 'chmod 755 -R /root/libs'
        execute 'chmod 755 -R /root/logs'
      }
    }
  }
}

task deployCloud{
  dependsOn ':fatJar'
  doLast {
    ssh.run {
      session(remotes.c00){
        put from: file('build/libs/exercicio04RemotePatterns.jar'), into:'/root/'
        execute 'chmod 755 /root/exercicio04RemotePatterns.jar'
      }
      session(remotes.c00_node00){
        put from: file('build/libs/exercicio04RemotePatterns.jar'), into:'/root/'
        execute 'chmod 755 /root/exercicio04RemotePatterns.jar'
      }
      session(remotes.c00_node01){
        put from: file('build/libs/exercicio04RemotePatterns.jar'), into:'/root/'
        execute 'chmod 755 /root/exercicio04RemotePatterns.jar'
      }
      session(remotes.c01){
        put from: file('build/libs/exercicio04RemotePatterns.jar'), into:'/root/'
        execute 'chmod 755 /root/exercicio04RemotePatterns.jar'
      }
      session(remotes.c01_node00){
        put from: file('build/libs/exercicio04RemotePatterns.jar'), into:'/root/'
        execute 'chmod 755 /root/exercicio04RemotePatterns.jar'
      }
      session(remotes.c01_node01){
        put from: file('build/libs/exercicio04RemotePatterns.jar'), into:'/root/'
        execute 'chmod 755 /root/exercicio04RemotePatterns.jar'
      }      
      session(remotes.client){
        put from: file('build/libs/exercicio04RemotePatterns.jar'), into:'/root/'
        execute 'chmod 755 /root/exercicio04RemotePatterns.jar'
      }
    }
  }
}

task deployClient{
  dependsOn ':fatJar'
  doLast {
    ssh.run {      
      session(remotes.client){
        put from: file('build/libs/exercicio04RemotePatterns.jar'), into:'/root/'
        execute 'chmod 755 /root/exercicio04RemotePatterns.jar'
      }
    }
  }
}